varnishtest "VCL: check panic and restart"

server s1 {
	rxreq
	txresp -hdr "Foo: bar" -body "abcdef\n"
	rxreq
	txresp -hdr "Panic: please" -body "012345\n"
	sema r1 sync 2
	accept
	rxreq
	txresp -hdr "Foo: foo" -body "abcdef\n"
} -start

varnish v1 -storage "-smalloc,1m" -vcl+backend {

	sub vcl_deliver {
		if (resp.http.panic) {
			panic "Had Panic header: " + resp.http.panic;
		}
	}
} -start

varnish v1 -cliok "param.set diag_bitmap 0x00001000"

# Force the (random) port selected to be used again after restart.
varnish v1 -cliok "param.set listen_address ${v1_addr}:${v1_port}"

# varnishtest defaults to auto_restart off, to avoid masking bugs.
varnish v1 -cliok "param.set auto_restart on" 

client c1 {
	txreq -url "/"
	rxresp
	txreq -url "/foo"
	# Don't expect answer, the server crashed.
	sema r1 sync 2
} -run

delay 2.5

client c1 {
	txreq -url "/"
	rxresp
	expect resp.http.foo == "foo"
} -run

varnish v1 -cliok "panic.show"
varnish v1 -cliok "panic.clear"
varnish v1 -clierr 300 "panic.clear"
